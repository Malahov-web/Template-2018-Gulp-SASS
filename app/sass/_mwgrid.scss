
// Input data:
$columns: 12;
$columns_gap: 10;
$container_width: 1200;

$column_name: 'ds_';

/* 
$devices: ( 
    mobile_horizontal: 480,
    tablets          : 768,
    desktop          : 1024,
    hi_definition    : 1366
);

$devices_class: ( 

    mobile_horizontal: 'mh_',
    tablets          : 'tb_',
    desktop          : 'ds_',
    hi_definition    : 'hd_'
);
 */

$devices: ( 
    mv_: 320,
    mh_: 480,
    tb_: 768,
    ds_: 1024,
    hd_: 1200
);





/* 1. Structure elements */

.section{
    width: 100%;
    float: left; width: 100%; clear: both;
}
.container{    
    max-width: $container_width+px;
    padding-left: $columns_gap+px;
    padding-right: $columns_gap+px;
    margin: 0 auto; box-sizing: border-box;    position: relative;
}
.row{
    margin-left: -$columns_gap+px;
    margin-right: -$columns_gap+px;
}
.row-line{
    margin-left: -$columns_gap+px;
    margin-right: -$columns_gap+px; 
    font-size: 0; 
}
.row-flex{
    display: flex; flex-wrap: wrap;
    margin-left: -$columns_gap+px;
    margin-right: -$columns_gap+px;    
}

.row>div{ float : left; }
.row-line>div{ float : none; display : inline-block;}

.row-line.middle>div{ vertical-align : middle;  }
.row-line.top>div{ vertical-align : top; }
.row-line.bottom>div{ vertical-align : bottom; }
.row-line.baseline>div{ vertical-align : baseline; }

.row-line.row-reverse{ direction : rtl; }
.row-line.row-reverse>div{ direction : ltr; }
/* 1.1.3 flex */
.row-flexbox{ display : flex; margin-left: -$columns_gap+px; margin-right: -$columns_gap+px; } 
[class*=row-flex].middle{ align-items : center; }
[class*=row-flex].top{ align-items : flex-start; }
[class*=row-flex].bottom{ align-items : flex-end; }
[class*=row-flex].baseline{ align-items : baseline; }
[class*=row-flex].stretch{ align-items : stretch; }
// $i: 1;
// @while $i < ($columns + 1) {

//     .#{$column_name}#{$i} {

//         $width: $i / $columns;
//         width: $width * 100%;
//     }

//     $i: $i + 1;

// }


// $column_name: mh_;
// @media  (min-width : 480px ) {

// $i: 1;
// @while $i < ($columns + 1) {

//     .#{$column_name}#{$i} {

//         $width: $i / $columns;
//         width: $width * 100%;
//     }

//     $i: $i + 1;

// }
// }


@each $device, $key in $devices {

    @media  (min-width : $key+px ) {

        .container{
            // max-width: $device;
            // max-width: map-get($device, $key);
            // max-width: $key+px;
        }
  

        .#{$device}offset_0 { 
            margin-left:  0;
        }

        $i: 1;
        @while $i < ($columns + 1) {

            .#{$device}#{$i} {

                $width: $i / $columns;
                width: $width * 100%;
            }
            .#{$device}offset_#{$i} {

                $width: $i / $columns;
                margin-left:  $width * 100%;
            }            

            $i: $i + 1;

        }

    } 
}


// @each $animal in puma, sea-slug, egret, salamander {
//   .#{$animal}-icon {
//     background-image: url('/images/#{$animal}.png');
//   }
// }


// @each $key, $value in $colorMap {
//   .color--#{$key} {
//     color: #{$value};
//   }
// }




[class*="hd_"],
[class*="ds_"],
[class*="tb_"],
[class*="mh_"],
[class*="mv_"]
{ 
    box-sizing : border-box; 
    padding-left: $columns_gap+px;
    padding-right: $columns_gap+px;
    position : relative; 
    min-height : 1px;
}



/* 4. Вспомогательные структурные элементы */

.container:before,
.container:after,
.row:before,
.row:after
{
    display: table;
    content: " "; box-sizing: border-box;
}
.container:after, 
.row:after
{
    clear : both;
}


// @function toNumber($string) {
// @function to_number($string) {
//   // Matrices
//   $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
//   $numbers: 0 1 2 3 4 5 6 7 8 9;

//   // Result
//   $result: 0;

//   // Looping through all characters
//   @for $i from 1 through str-length($string) {
//     // Do magic
//   }

//   @return $result;
// }




/* 4. Утилиты адаптации  */
@each $device, $key in $devices {

    // @media  (max-width : #{$key}-1+px ) {
    $hidden_breakpoint: $key - 1;
    @media  (max-width : $hidden_breakpoint+px ) {

        .container .#{$device}hidden {
            display: none;
            // color: $hidden_breakpoint;
            // color: $key;
        }

        // @while $i < ($columns + 1) {

        //     .#{$device}#{$i} {

        //         $width: $i / $columns;
        //         width: $width * 100%;
        //     }

        //     $i: $i + 1;

        // }

    } 
}




/* 5. Text utulites  */

    .lefted{ text-align : left; }
    .righted{ text-align : right; }
    .centered{ text-align : center; }
    .justifyed{ text-align : justify; }


@each $device, $key in $devices {

    @media  (min-width : $key+px ) {

        .#{$device}lefted{ text-align : left; }
        .#{$device}righted{ text-align : right; }
        .#{$device}centered{ text-align : center; }
        .#{$device}justifyed{ text-align : justify; }

    } 
}